name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-release:
    name: Build Release - ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os-name: Linux-x86_64
          - target: aarch64-unknown-linux-gnu
            os-name: Linux-aarch64
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        
      - name: Build with Cross
        uses: houseabsolute/actions-rust-cross@v0
        with:
          target: ${{ matrix.target }}
          args: --release --verbose
          
      - name: Prepare release binary
        run: |
          mkdir -p release
          cp target/${{ matrix.target }}/release/splatoon3-ghost-drawer release/splatoon3-ghost-drawer-${{ matrix.os-name }}
          chmod +x release/splatoon3-ghost-drawer-${{ matrix.os-name }}
          cd release
          tar czf splatoon3-ghost-drawer-${{ matrix.os-name }}.tar.gz splatoon3-ghost-drawer-${{ matrix.os-name }}
          sha256sum *.tar.gz > splatoon3-ghost-drawer-${{ matrix.os-name }}.tar.gz.sha256
          
      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.os-name }}
          path: |
            release/*.tar.gz
            release/*.sha256
          retention-days: 1

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build-release
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
          
      - name: Prepare release files
        run: |
          mkdir -p release-files
          find artifacts -name "*.tar.gz" -o -name "*.sha256" | xargs -I {} cp {} release-files/
          ls -la release-files/
          
      - name: Generate release notes
        id: release_notes
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          
          # Check if this is a pre-release
          if [[ "$VERSION" =~ -(rc|beta|alpha) ]]; then
            echo "IS_PRERELEASE=true" >> $GITHUB_ENV
          else
            echo "IS_PRERELEASE=false" >> $GITHUB_ENV
          fi
          
          # Generate release notes
          cat > release_notes.md << EOF
          ## Splatoon3 Ghost Drawer $VERSION

          ### インストール方法

          1. お使いのシステムに合わせたバイナリをダウンロードしてください:
             - \`splatoon3-ghost-drawer-Linux-x86_64.tar.gz\`: 64ビット Linux (WSL2 Ubuntu など)
             - \`splatoon3-ghost-drawer-Linux-aarch64.tar.gz\`: ARM64 Linux (Raspberry Pi Zero 2W, Orange Pi Zero 2W)

          2. ダウンロードしたファイルを展開:
             \`\`\`bash
             tar xzf splatoon3-ghost-drawer-Linux-*.tar.gz
             \`\`\`

          3. 実行権限を付与して実行:
             \`\`\`bash
             chmod +x splatoon3-ghost-drawer-*
             sudo ./splatoon3-ghost-drawer-* setup
             \`\`\`

          ### 変更内容

          最新の変更内容については、[コミット履歴](https://github.com/${{ github.repository }}/commits/$VERSION)をご確認ください。

          ### チェックサム

          ダウンロードしたファイルの整合性を確認するには、対応する \`.sha256\` ファイルを使用してください:
          \`\`\`bash
          sha256sum -c splatoon3-ghost-drawer-*.tar.gz.sha256
          \`\`\`
          EOF
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: ${{ env.VERSION }}
          body_path: release_notes.md
          prerelease: ${{ env.IS_PRERELEASE }}
          files: release-files/*
          generate_release_notes: true